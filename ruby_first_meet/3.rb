=begin
Дана переменная age. Вам нужно написать код, чтобы если age > 18, то вывести "Добро пожаловать!". Не забывайте, чем
заканчивается оператор if.
=end
if age > 18
  puts "Добро пожаловать!"
end

=begin
Дана переменная grade. Напишите код, который будет выводить сообщение "Отлично!", если grade больше или равно 70 и
сообщение "Все плохо!", если grade меньше 70.
=end
if grade >= 70
  puts "Отлично!"
else
  puts "Все плохо!"
end

=begin
Напишите программу, которая должна считать число, которое подается на вход и, если это число больше или равно 5 и
меньше или равно 10, то вывести "Да". Иначе - вывести "Нет".
=end
arg = gets.to_i
if arg >= 5 && arg <= 10
  puts "Да"
else
  puts "Нет"
end

=begin
Дана переменная weight. Напишите оператор case, который на основании этой переменной будет выводить следующий результат:
если значение weight равно 1, 2 или 3 - то вывести "Low"; если значение weight равно 4, 5 или 6 - то вывести "High"; во
всех остальных случаях вывести "Invalid".
=end
case weight
when 1, 2, 3
  puts "Low"
when 4, 5, 6
  puts "High"
else
  puts "Invalid"
end

=begin
Напишите программу, которая считывает два числа, которые подаются на вход. Затем нужно с использованием цикла while
вывести числа с первого по второе поданные на вход (включительно). Каждое число выводить нужно с новой строки.
=end
x = gets.to_i
y = gets.to_i
while x <= y
  puts x
  x += 1
end

# Напишите цикл for, который с помощью диапазона выведет буквы от "b" до "n" (включительно).
for l in ('b'..'n')
  puts l
end

=begin
На вход подается число. Вам нужно его считать и написать цикл for с использованием диапазона 0..99. В цикле должна
выводится переменная цикла до тех пор, пока она не станет равна поданому на вход числу, которое вы считали в самом начале.
=end
x = gets.to_i
for i in (0..99)
  break if i == x
  puts i
end

# На вход подается целое число. Необходимо вывести все нечетные числа от нуля по это число включительно.
for i in (0..gets.to_i)
  puts i if i % 2 == 1
end

=begin
На вход подается число - количество углов. Если это 3 - нужно вывести - "Треугольник", если 4 - "Четырехугольник",
если 5 - "Пятиугольник", если 6 - "Шестиугольник". Если подано другое число - вывести "Ошибка"
=end
case gets.to_i
when 3
  puts "Треугольник"
when 4
  puts "Четырехугольник"
when 5
  puts "Пятиугольник"
when 6
  puts "Шестиугольник"
else
  puts "Ошибка"
end

=begin
Дано целое число (его нужно считать). Если оно больше нуля - вывести 1, если равно нулю - вывести 0, если меньше нуля -
вывести -1 (минус один). Эта задача легко решается с помощью условий (if), но... попробуйте решить ее с помощью оператора
case, это позволит вам увидеть особенности Ruby, благодаря которым такое решение возможно и оно тоже достаточно простое.
(Специально для тех, кому что-то будет непонятно, а такие обязательно будут, максимальное число которое может быть подано
на вход не превышает 10000. Это касается того случая, если вы будете решать через использование case, так как при решении
через простые условия это не имеет значения).
=end
case gets.to_i
when 0
  puts 0
when (1..10000)
  puts 1
else
  puts -1
end

# Даны три целых числа, каждое записано в отдельной строке.
x = gets.to_i
y = gets.to_i
z = gets.to_i
if x > y
  puts x > z ? x : z
else
  puts y > z ? y : z
end

# Дано неотрицательное целое число. Найдите и выведите первую цифру числа (первую слева).
x = gets.to_i
while x > 9
  x /= 10
end
puts x

=begin
На вход подается целое число n. Напишите программу, которая выводит квадраты натуральных чисел от 1 до n (включительно).
Квадрат каждого числа должен выводится в новой строке.
=end
for i in (1..gets.to_i)
  puts i**2
end

# Дано трехзначное число. Найдите сумму его цифр.
x = gets.to_i
sum = 0
while x > 0
  sum = sum + x % 10
  x /= 10
end
puts sum